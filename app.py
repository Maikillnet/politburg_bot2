from flask import Flask, request
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)
import os
import asyncio

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
TOKEN = "8053119583:AAEk2_DTDRqta2_gPuZ83DZkcebwyZ1nKPM"
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"https://politburg-bot.onrender.com{WEBHOOK_PATH}"

# Flask —Å–µ—Ä–≤–µ—Ä
app = Flask(__name__)

# Telegram Application
application = ApplicationBuilder().token(TOKEN).build()

# === –•—ç–Ω–¥–ª–µ—Ä—ã ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("PolitBurgBot –∞–∫—Ç–∏–≤–µ–Ω. –®–≤—ã—Ä—è–π –∫–æ–º–∞–Ω–¥—ã.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n/start\n/help\n/post\n/exit\n/stats")

async def post_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ö†Ô∏è –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç–∏–Ω–≥–∞.")

async def exit_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ë–æ—Ç –Ω–µ —Ö–æ—á–µ—Ç —É–º–∏—Ä–∞—Ç—å. –ù–æ –µ—Å–ª–∏ –Ω–∞–¥–æ ‚Äî –¥–æ–±–∞–≤–∏–º shutdown.")

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ, –Ω–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç.")

# === –†–æ—É—Ç –¥–ª—è Telegram Webhook ===
@app.route(WEBHOOK_PATH, methods=["POST"])
async def telegram_webhook():
    if request.method == "POST":
        update = Update.de_json(request.get_json(force=True), application.bot)
        await application.process_update(update)
        return "ok"

# === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ ===
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("help", help_command))
application.add_handler(CommandHandler("post", post_command))
application.add_handler(CommandHandler("exit", exit_command))
application.add_handler(CommandHandler("stats", stats_command))

# === Webhook –∏ –∑–∞–ø—É—Å–∫ ===
async def main():
    await application.bot.set_webhook(WEBHOOK_URL)
    print("üöÄ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", WEBHOOK_URL)

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

